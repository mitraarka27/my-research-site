---
// src/pages/research/[tag].astro
import Base from "@/layouts/Base.astro";
import { getCollection } from "astro:content";
import { tagToSlug, slugToTag } from "@/utils/tags";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  const tagSet = new Set<string>();
  for (const p of projects) for (const t of (p.data.tags ?? [])) tagSet.add(t);
  const allTags = Array.from(tagSet);

  return allTags.map((t) => ({
    params: { tag: tagToSlug(t) },
    props: { allTags, originalTag: t },
  }));
}

const { tag } = Astro.params;
const { allTags } = Astro.props;

const projects = await getCollection("projects");
const resolvedTag = slugToTag(tag, allTags);
const items = projects.filter((p) => (p.data.tags ?? []).includes(resolvedTag));
---

<Base title={`Research â€” ${resolvedTag}`}>
  <h1 class="text-3xl font-semibold mb-6">Tag: {resolvedTag}</h1>
  {items.length === 0 ? (
    <p>No projects for this tag.</p>
  ) : (
    <ul class="grid gap-6">
      {items.map(({ slug, data }) => (
        <li>
          <a href={`/research/${slug}/`} class="underline">{data.title}</a>
        </li>
      ))}
    </ul>
  )}
</Base>
