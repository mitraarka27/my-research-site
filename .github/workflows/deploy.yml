name: deploy

on:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1   # CloudFront/ACM region

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      # Select env -> export S3 bucket and initial (optional) CF distribution ID
      - name: Select STAGING env (PRs)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "S3_BUCKET=${{ secrets.S3_BUCKET_STAGING }}" >> $GITHUB_ENV
          echo "DISTRIBUTION_ID=${{ secrets.DISTRIBUTION_ID_STAGING }}" >> $GITHUB_ENV
          echo "CF_ALIAS=${{ secrets.CF_ALIAS_STAGING }}" >> $GITHUB_ENV

      - name: Select PROD env (push to main / tags)
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "S3_BUCKET=${{ secrets.S3_BUCKET_PROD }}" >> $GITHUB_ENV
          echo "DISTRIBUTION_ID=${{ secrets.DISTRIBUTION_ID_PROD }}" >> $GITHUB_ENV
          echo "CF_ALIAS=${{ secrets.CF_ALIAS_PROD }}" >> $GITHUB_ENV

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Who am I
        run: aws sts get-caller-identity

      - name: Debug env
        run: |
          echo "Bucket=$S3_BUCKET"
          echo "Distribution ID (pre)=$DISTRIBUTION_ID"
          echo "Alias=$CF_ALIAS"

      # Resolve CF distribution ID by alias if not provided as a secret
      - name: Ensure CloudFront distribution ID
        run: |
          if [ -z "${DISTRIBUTION_ID}" ]; then
            if [ -z "${CF_ALIAS}" ]; then
              echo "DISTRIBUTION_ID is empty and CF_ALIAS not set. Set either DISTRIBUTION_ID_* secret or CF_ALIAS_* secret."
              exit 1
            fi
            ID=$(aws cloudfront list-distributions \
              --query "DistributionList.Items[?Aliases.Quantity>0 && contains(join(',',Aliases.Items),'${CF_ALIAS}')].Id | [0]" \
              --output text)
            echo "Resolved ID: $ID"
            if [ "$ID" = "None" ] || [ -z "$ID" ]; then
              echo "Could not resolve CloudFront distribution for alias: $CF_ALIAS"
              exit 1
            fi
            echo "DISTRIBUTION_ID=$ID" >> $GITHUB_ENV
          fi

      - name: Upload HTML/XML/TXT (short cache)
        run: |
          aws s3 cp dist s3://$S3_BUCKET/ --recursive \
            --exclude "*" --include "*.html" --include "*.xml" --include "*.txt" \
            --cache-control "public, max-age=60, s-maxage=300" \
            --metadata-directive REPLACE

      - name: Upload assets (immutable long cache)
        run: |
          aws s3 cp dist s3://$S3_BUCKET/ --recursive \
            --exclude "*.html" --exclude "*.xml" --exclude "*.txt" \
            --cache-control "public, max-age=31536000, immutable" \
            --metadata-directive REPLACE

      - name: Invalidate CloudFront
        run: |
          echo "Invalidating distribution: $DISTRIBUTION_ID"
          aws cloudfront create-invalidation --distribution-id "$DISTRIBUTION_ID" \
            --paths "/*.html" "/index.html" "/404.html" "/sitemap*.xml" "/rss*.xml" "/robots.txt"
