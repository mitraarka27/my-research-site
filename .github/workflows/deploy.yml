name: deploy

on:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      # default region CloudFront/ACM requires
      AWS_REGION: us-east-1

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      # Staging on PRs
      - name: Select STAGING env (PRs)
        if: github.event_name == 'pull_request'
        run: |
          echo "S3_BUCKET=${{ secrets.S3_BUCKET_STAGING }}" >> $GITHUB_ENV
          echo "DISTRIBUTION_ID=${{ secrets.DISTRIBUTION_ID_STAGING }}" >> $GITHUB_ENV

      # Prod on push to main or tag
      - name: Select PROD env (push)
        if: github.event_name == 'push'
        run: |
          echo "S3_BUCKET=${{ secrets.S3_BUCKET_PROD }}" >> $GITHUB_ENV
          echo "DISTRIBUTION_ID=${{ secrets.DISTRIBUTION_ID_PROD }}" >> $GITHUB_ENV

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Upload HTML/XML/TXT (short cache)
        run: |
          aws s3 cp dist s3://$S3_BUCKET/ --recursive \
            --exclude "*" --include "*.html" --include "*.xml" --include "*.txt" \
            --cache-control "public, max-age=60, s-maxage=300" \
            --metadata-directive REPLACE

      - name: Upload assets (immutable long cache)
        run: |
          aws s3 cp dist s3://$S3_BUCKET/ --recursive \
            --exclude "*.html" --exclude "*.xml" --exclude "*.txt" \
            --cache-control "public, max-age=31536000, immutable" \
            --metadata-directive REPLACE

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation --distribution-id "$DISTRIBUTION_ID" \
            --paths "/*.html" "/index.html" "/404.html" "/sitemap*.xml" "/rss*.xml" "/robots.txt"
